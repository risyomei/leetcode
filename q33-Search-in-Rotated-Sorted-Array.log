class Solution {

public:

    int binarySearch(vector<int>& nums, int target) {

        int left = 0;
        int right = nums.size() - 1;

        while(left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                return mid; 
            } else if (nums[left] <= nums[mid]) { // right is unordered
                if ( target >= nums[left] && target <nums[mid]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
                
            } else { // nums[left] > nums[mid], left is unordered
                if ( nums[mid] < target && target <= nums[right]) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }                
            }
        }
        return -1;
    }

    int search(vector<int>& nums, int target) {
        return binarySearch(nums,target);
    }

};